7. Design and implement a database using DDL statements and apply normalization on them.

mysql> CREATE DATABASE QUES7;
Query OK, 1 row affected (0.10 sec)

mysql> USE QUES7;
Database changed
mysql> CREATE TABLE Authors (
    ->     author_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     author_name VARCHAR(100) NOT NULL
    -> );
Query OK, 0 rows affected (0.13 sec)

mysql> 
mysql> CREATE TABLE Books (
    ->     book_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     title VARCHAR(255) NOT NULL,
    ->     author_id INT,
    ->     genre VARCHAR(50),
    ->     publication_year INT,
    ->     FOREIGN KEY (author_id) REFERENCES Authors(author_id)
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql> INSERT INTO Authors (author_name) VALUES ('J.K. Rowling');
Query OK, 1 row affected (0.11 sec)

mysql> INSERT INTO Authors (author_name) VALUES ('George Orwell');
Query OK, 1 row affected (0.02 sec)

mysql> INSERT INTO Authors (author_name) VALUES ('Harper Lee');
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO Books (title, author_id, genre, publication_year) VALUES ('Harry Potter and the Philosopher''s Stone', 1, 'Fantasy', 1997);
Query OK, 1 row affected (0.34 sec)

mysql> INSERT INTO Books (title, author_id, genre, publication_year) VALUES ('1984', 2, 'Dystopian Fiction', 1949);
Query OK, 1 row affected (0.02 sec)

mysql> INSERT INTO Books (title, author_id, genre, publication_year) VALUES ('To Kill a Mockingbird', 3, 'Southern Gothic', 1960);
Query OK, 1 row affected (0.01 sec)

mysql> SELECT Books.title, Authors.author_name
    -> FROM Books
    -> JOIN Authors ON Books.author_id = Authors.author_id;
+------------------------------------------+---------------+
| title                                    | author_name   |
+------------------------------------------+---------------+
| Harry Potter and the Philosopher's Stone | J.K. Rowling  |
| 1984                                     | George Orwell |
| To Kill a Mockingbird                    | Harper Lee    |
+------------------------------------------+---------------+
3 rows in set (0.00 sec)

/*DONT RUN THIS:

Our tables are currently in the first normal form (1NF) as there are no repeating groups.

To achieve Second Normal Form (2NF), we need to ensure that all non-key attributes are fully functional dependent on the primary key. Our tables already satisfy this condition.

For Third Normal Form (3NF), we need to ensure that there are no transitive dependencies. In our current design, there's no such dependency.

Therefore, our tables are already in the third normal form, and normalization is complete.
*/
